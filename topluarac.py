## topluarac.py - topluarac v1.0
##
import os, sys
import readline
from time import sleep as timeout
from core.toplucore import *

def main():
	banner()
	print("   [01] Bilgi Toplama")
	print("   [02] Güvenlik Açığı Analizi")
	print("   [03] İnternet Korsanlığı")
	print("   [04] Veritabanı Değerlendirmeleri")
	print("   [05] Şifre Atakları")
	print("   [06] Kablosuz Bağlantı Atakları")
	print("   [07] Tersine Mühendislik")
	print("   [08] İstismar Araçları")
	print("   [09] Bulma ve Sızdırma")
	print("   [10] Raporlama Araçları")
	print("   [11] Linux Dağıtımları İndir")
	print("   [12] Stres Testi")
	print("   [13] Termux Yardımcı Araçlar")
	print("   [14] Shell Fonksiyon [.bashrc]")
	print("\n   [00] topluarac'tan çık.\n")
	topluarac = input("lmst > ")

	# 01 - Bilgi Toplama
	if topluarac.strip() == "1" or topluarac.strip() == "01":
		print("\n    [01] Nmap: Ağ keşfi ve güvenlik denetimi için yardımcı program")
		print("    [02] Red Hawk: Bilgi Toplama, Güvenlik Açığı Taraması")
		print("    [03] D-Tect: Penetrasyon Testi için All-In-One Aracı")
		print("    [04] sqlmap: Otomatik SQL enjeksiyonu yapma ve veritabanı alma aracı")
		print("    [05] Infoga: Elektronik posta hesap bilgileri toplama aracı")
		print("    [06] ReconDog: Bilgi Toplama ve Güvenlik Açığı Tarama aracı")
		print("    [07] AndroZenmap")
		print("    [08] sqlmate: sqlmap benzeri bir araç")
		print("    [09] AstraNmap: Bir bilgisayar ağındaki ana bilgisayarları ve hizmetleri bulmak için kullanılan güvenlik tarayıcısı")
		print("    [10] just-for-fun")
		print("    [11] Easymap: Nmap Kısayolu")
		print("    [12] BlackBox: Sızma Testi Aracı")
		print("    [13] XD3v: Telefonunuzla ilgili tüm önemli ayrıntıları bilmenizi sağlayan araç")
		print("    [14] Crips: Bu Araç: IP Adresleri, Web Sayfaları ve DNS kayıtları hakkında hızlı bilgi almak için kullanılabilecek bir çevrimiçi IP Araçları koleksiyonudur")
		print("    [15] SIR: Herhangi Spkype Kullanıcısının Son IP Adresi Bilgisini Bulma Aracı")
		print("    [16] EvilURL: IDN Homograph Saldırısı için unicode kötü alanlar oluşturun ve bunları tespit et")
		print("    [17] Striker: Keşif ve Güvenlik Açığı Tarama Aracı")
		print("    [18] Xshell: Araç işte yoruldum")
		print("    [19] OWScan: OVID Web Tarayıcı")
		print("    [20] OSIF: Facebook Açık Kaynak Bilgileri")
		print("    [21] Devploit: Basit Bilgi Toplama Aracı")
		print("    [22] Namechk: 100'den fazla web sitesinde, forumda ve sosyal ağda kullanıcı adlarını kontrol etmek için namechk.com tabanlı Osint aracı")
		print("    [23] AUXILE: Wen Uygulama Analizi Aracı")
		print("    [24] inther: Shodan, censys ve hackertarget kullanarak bilgi toplama")
		print("    [25] GINF: GitHub Bilgi Toplama Aracı")
		print("    [26] GPS Tracking")
		print("    [27] ASU: Facebook Hacking Aracı")
		print("    [28] fim: Facebook Görsel İndirici")
		print("    [29] MaxSubdoFinder: Alt Alan Adı Bulma Aracı")
		print("    [30] pwnedOrNot: Güvenliği Aşılmış E-posta Hesaplarının Parolalarını Bulmak için OSINT Aracı")
		print("    [31] Mac-Lookup: Belirli bir Mac adresi hakkında bilgi bulur")
		print("    [32] BillCipher: Bir Web Sitesi veya IP adresi için Bilgi Toplama aracı")
		print("    [33] dnsrecon: Güvenlik değerlendirmesi ve ağ sorunlarını giderme aracı")
		print("    [34] zphisher: otomatik Oltalama Aracı")
		print("    [35] Mr.SIP: SIP Tabanlı Denetim ve Saldırı Aracı")
		print("\n    [00] Ana Menüye Dön\n")
		infogathering = input("lmst > ")
		if infogathering.strip() == "01" or infogathering.strip() == "1": nmap()
		elif infogathering.strip() == "02" or infogathering.strip() == "2": red_hawk()
		elif infogathering.strip() == "03" or infogathering.strip() == "3": dtect()
		elif infogathering.strip() == "04" or infogathering.strip() == "4": sqlmap()
		elif infogathering.strip() == "05" or infogathering.strip() == "5": infoga()
		elif infogathering.strip() == "06" or infogathering.strip() == "6": reconDog()
		elif infogathering.strip() == "07" or infogathering.strip() == "7": androZenmap()
		elif infogathering.strip() == "08" or infogathering.strip() == "8": sqlmate()
		elif infogathering.strip() == "09" or infogathering.strip() == "9": astraNmap()
		elif infogathering.strip() == "10": justforfun()
		elif infogathering.strip() == "11": easyMap()
		elif infogathering.strip() == "12": blackbox()
		elif infogathering.strip() == "13": xd3v()
		elif infogathering.strip() == "14": crips()
		elif infogathering.strip() == "15": sir()
		elif infogathering.strip() == "16": evilURL()
		elif infogathering.strip() == "17": striker()
		elif infogathering.strip() == "18": xshell()
		elif infogathering.strip() == "19": owscan()
		elif infogathering.strip() == "20": osif()
		elif infogathering.strip() == "21": devploit()
		elif infogathering.strip() == "22": namechk()
		elif infogathering.strip() == "23": auxile()
		elif infogathering.strip() == "24": inther()
		elif infogathering.strip() == "25": ginf()
		elif infogathering.strip() == "26": gpstr()
		elif infogathering.strip() == "27": asu()
		elif infogathering.strip() == "28": fim()
		elif infogathering.strip() == "29": maxsubdofinder()
		elif infogathering.strip() == "30": pwnedOrNot()
		elif infogathering.strip() == "31": maclook()
		elif infogathering.strip() == "32": billcypher()
		elif infogathering.strip() == "33": dnsrecon()
		elif infogathering.strip() == "34": zphisher()
		elif infogathering.strip() == "35": mrsip()
		elif infogathering.strip() == "00" or infogathering.strip() == "0": restart_program()
		else: print("\nERROR: Wrong Input");timeout(1);restart_program()
	
	# 02 - Güvenlik Açığı Analizi
	elif topluarac.strip() == "2" or topluarac.strip() == "02":
		print("\n    [01] Nmap: Ağ keşfi ve güvenlik denetimi için yardımcı program")
		print("    [02] AndroZenmap")
		print("    [03] AstraNmap: Bir bilgisayar ağındaki ana bilgisayarları ve hizmetleri bulmak için kullanılan güvenlik tarayıcısı")
		print("    [04] Easymap: Nmap Kısayolu")
		print("    [05] Red Hawk: Bilgi Toplama, Güvenlik Açığı Taraması")
		print("    [06] D-Tect: Penetrasyon Testi için All-In-One Aracı")
		print("    [07] Damn Small SQLi Scanner: 100 kod satırının altında yazılmış tamamen işlevsel bir SQL enjeksiyon güvenlik açığı tarayıcısı (GET ve POST parametrelerini destekler)")
		print("    [08] SQLiv: büyük SQL enjeksiyon güvenlik açığı tarayıcı")
		print("    [09] sqlmap: Otomatik SQL enjeksiyonu yapma ve veritabanı alma aracı")
		print("    [10] sqlscan: Hızlı SQL Tarayıcı, Dorker, Webshell enjektör -PHP")
		print("    [11] Wordpresscan: WPScan benzeri")
		print("    [12] WPScan: Ücretsiz wordPress güvenlik tarayıcısı")
		print("    [13] sqlmate: sqlmap benzeri bir araç")
		print("    [14] wordpresscan")
		print("    [15] just-for-fun")
		print("    [16] Rang3r: IP + Bağlantı Noktası Tarayıcı")
		print("    [17] Striker: Keşif ve Güvenlik Açığı Tarama Paketi")
		print("    [18] Routersploit: Cihazlar için İstismar Programı")
		print("    [19] Xshell: Araç Seti")
		print("    [20] SH33LL: Shell Tarayıcı")
		print("    [21] BlackBox: Sızma Testi Aracı")
		print("    [22] XAttacker: Web Sitesinde Güvenlik Açığı Tarayıcısı ve Otomatik Sömürücü")
		print("    [23] OWScan: OVID Web Tarayıcı")
		print("\n    [00] Ana Menüye Dön\n")
		vulnsys = input("lmst > ")
		if vulnsys.strip() == "01" or vulnsys.strip() == "1": nmap()
		elif vulnsys.strip() == "02" or vulnsys.strip() == "2": androZenmap()
		elif vulnsys.strip() == "03" or vulnsys.strip() == "3": astraNmap()
		elif vulnsys.strip() == "04" or vulnsys.strip() == "4": easyMap()
		elif vulnsys.strip() == "05" or vulnsys.strip() == "5": red_hawk()
		elif vulnsys.strip() == "06" or vulnsys.strip() == "6": dtect()
		elif vulnsys.strip() == "07" or vulnsys.strip() == "7": dsss()
		elif vulnsys.strip() == "08" or vulnsys.strip() == "8": sqliv()
		elif vulnsys.strip() == "09" or vulnsys.strip() == "9": sqlmap()
		elif vulnsys.strip() == "10": sqlscan()
		elif vulnsys.strip() == "11": wordpreSScan()
		elif vulnsys.strip() == "12": wpscan()
		elif vulnsys.strip() == "13": sqlmate()
		elif vulnsys.strip() == "14": wordpresscan()
		elif vulnsys.strip() == "15": justforfun()
		elif vulnsys.strip() == "16": rang3r()
		elif vulnsys.strip() == "17": striker()
		elif vulnsys.strip() == "18": routersploit()
		elif vulnsys.strip() == "19": xshell()
		elif vulnsys.strip() == "20": sh33ll()
		elif vulnsys.strip() == "21": blackbox()
		elif vulnsys.strip() == "22": xattacker()
		elif vulnsys.strip() == "23": owscan()
		elif vulnsys.strip() == "00" or vulnsys.strip() == "0": restart_program()
		else: print("\nERROR: Wrong Input");timeout(1);restart_program()

	# 03 - İnternet Korsanlığı
	elif topluarac.strip() == "3" or topluarac.strip() == "03":
		print("\n    [01] sqlmap: Otomatik SQL enjeksiyonu yapma ve veritabanı alma aracı")
		print("    [02] WebDAV: WebDAV Dosya Yükleme Aracı")
		print("    [03] MaxSubdoFinder: Alt Alan Adı Bulma Aracı")
		print("    [04] Webdav Mass Exploit")
		print("    [05] Atlas: Hızlı SQLMap Dış Müdahale Önericisi")
		print("    [06] sqldump: Kolay sql sonuç dökümü")
		print("    [07] Websploit: Gelişmiş MiTM Aracı")
		print("    [08] sqlmate: sqlmap benzeri bir araç")
		print("    [09] inther: Shodan, censys ve hackertarget kullanarak bilgi toplama aracı")
		print("    [10] HPB: HTML Sayfa Oluşturucusu")
		print("    [11] Xshell: Araç Seti")
		print("    [12] SH33LL: Shell Tarayıcı")
		print("    [13] XAttacker: Web Sitesinde Güvenlik Açığı Tarayıcısı ve Otomatik Sömürücü")
		print("    [14] XSStrike: En gelişmiş XSS Tarayıcı")
		print("    [15] Breacher: Gelişmiş çok iş parçacıklı admin paneli bulucu")
		print("    [16] OWScan: OVID Web Tarayıcı")
		print("    [17] ko-dork: Basit bir güvenlik web tarayıcısı")
		print("    [18] ApSca: Güçlü web penetrasyonu uygulaması")
		print("    [19] amox: Kelime saldırısı ile admin paneli gibi şeyleri bulursunuz")
		print("    [20] FaDe: Kindeditor, fckeditor ve webdav ile sahte deface,yani index basıyorsunuz işte")
		print("    [21] AUXILE")
		print("\n    [00] Ana Menüye Dön\n")
		webhack = input("lmst > ")
		if webhack.strip() == "01" or webhack.strip() == "1": sqlmap()
		elif webhack.strip() == "02" or webhack.strip() == "2": webdav()
		elif webhack.strip() == "03" or webhack.strip() == "3": maxsubdofinder()
		elif webhack.strip() == "04" or webhack.strip() == "4": webmassploit()
		elif webhack.strip() == "05" or webhack.strip() == "5": atlas()
		elif webhack.strip() == "06" or webhack.strip() == "6": sqldump()
		elif webhack.strip() == "07" or webhack.strip() == "7": websploit()
		elif webhack.strip() == "08" or webhack.strip() == "8": sqlmate()
		elif webhack.strip() == "09" or webhack.strip() == "9": inther()
		elif webhack.strip() == "10": hpb()
		elif webhack.strip() == "11": xshell()
		elif webhack.strip() == "12": sh33ll()
		elif webhack.strip() == "13": xattacker()
		elif webhack.strip() == "14": xsstrike()
		elif webhack.strip() == "15": breacher()
		elif webhack.strip() == "16": owscan()
		elif webhack.strip() == "17": kodork()
		elif webhack.strip() == "18": apsca()
		elif webhack.strip() == "19": amox()
		elif webhack.strip() == "20": fade()
		elif webhack.strip() == "21": auxile()
		elif webhack.strip() == "00" or webhack.strip() == "0": restart_program()
		else: print("\nERROR: Wrong Input");timeout(1);restart_program()
	
	# 04 - Veritabanı Değerlendirmesi
	elif topluarac.strip() == "4" or topluarac.strip() == "04":
		print("\n    [01] DbDat: DbDat güvenliği değerlendirmek için bir veritabanında denetimler gerçekleştirir")
		print("    [02] sqlmap: Otomatik SQL enjeksiyonu yapma ve veritabanı alma aracı")
		print("    [03] NoSQLMap: Otomatik NoSQL veritabanı numaralandırma ve web uygulaması kullanım aracı")
		print("    [04] audit_couchdb: Bir CouchDB sunucusunda büyük veya küçük güvenlik sorunlarını algılama")
		print("    [05] mongoaudit: DB örneklerinizin güvenli bir şekilde korunup korunmadığını bildiren otomatik bir pentesting aracı")
		print("\n    [00] Ana Menüye Dön\n")
		dbssm = input("lmst > ")
		if dbssm.strip() == "01" or dbssm.strip() == "1": dbdat()
		elif dbssm.strip() == "02" or dbssm.strip() == "2": sqlmap()
		elif dbssm.strip() == "03" or dbssm.strip() == "3": nosqlmap
		elif dbssm.strip() == "04" or dbssm.strip() == "4": audit_couchdb()
		elif dbssm.strip() == "05" or dbssm.strip() == "5": mongoaudit()
		elif dbssm.strip() == "00" or dbssm.strip() == "0": restart_program()
		else: print("\nERROR: Wrong Input");timeout(1);restart_program()
	
	# 05 - Şifre Atakları
	elif topluarac.strip() == "5" or topluarac.strip() == "05":
		print("\n    [01] Hydra: Şu aracı indirdiysen biliyorsundur ama Farklı hizmetleri destekleyen ağ oturum açma krakeri")
		print("    [02] FMBrute: Facebook Çoklu Brute Force Atak Aracı")
		print("    [03] HashID")
		print("    [04] Facebook Brute Force 3")
		print("    [05] Black Hydra: Hydra'nın küçültülmüş hali")
		print("    [06] Hash Buster")
		print("    [07] FBBrute: Facebook Brute Force")
		print("    [08] Cupp: Ortak Kullanıcı Şifreleri")
		print("    [09] InstaHack: Instagram Brute Force")
		print("    [10] Indonesian Wordlist")
		print("    [11] Xshell")
		print("    [12] Aircrack-ng: WiFi güvenlik denetim araçları paketi")
		print("    [13] BlackBox: Sızma Testi Aracı")
		print("    [14] Katak: Karma Şifre Çözücü")
		print("    [15] Hasher: Otomatik Algılayan Karma Şifre Çözücü")
		print("    [16] Hash-Generator: Hasher Benzeri")
		print("    [17] nk26: Nkosec Kodlaması Aracı")
		print("    [18] Hasherdotid: Şifreli metin bulmak için araç")
		print("    [19] Crunch: özelleştirilebilir wordlist oluşturucu")
		print("    [20] Hashcat: şifre kurtarma programı")
		print("    [21] ASU: Facebook Hack Araçları")
		print("\n    [00] Ana Menüye Dön\n")
		passtak = input("lmst > ")
		if passtak.strip() == "01" or passtak.strip() == "1": hydra()
		elif passtak.strip() == "02" or passtak.strip() == "2": fmbrute()
		elif passtak.strip() == "03" or passtak.strip() == "3": hashid()
		elif passtak.strip() == "04" or passtak.strip() == "4": fbBrute()
		elif passtak.strip() == "05" or passtak.strip() == "5": black_hydra()
		elif passtak.strip() == "06" or passtak.strip() == "6": hash_buster()
		elif passtak.strip() == "07" or passtak.strip() == "7": fbbrutex()
		elif passtak.strip() == "08" or passtak.strip() == "8": cupp()
		elif passtak.strip() == "09" or passtak.strip() == "9": instaHack()
		elif passtak.strip() == "10": indonesian_wordlist()
		elif passtak.strip() == "11": xshell()
		elif passtak.strip() == "12": aircrackng()
		elif passtak.strip() == "13": blackbox()
		elif passtak.strip() == "14": katak()
		elif passtak.strip() == "15": hasher()
		elif passtak.strip() == "16": hashgenerator()
		elif passtak.strip() == "17": nk26()
		elif passtak.strip() == "18": hasherdotid()
		elif passtak.strip() == "19": crunch()
		elif passtak.strip() == "20": hashcat()
		elif passtak.strip() == "21": asu()
		elif passtak.strip() == "00" or passtak.strip() == "0": restart_program()
		else: print("\nERROR: Wrong Input");timeout(1);restart_program()
	
	# 06 - Kablosuz Bağlantı Atakları
	elif topluarac.strip() == "6" or topluarac.strip() == "06":
		print("\n    [01] Aircrack-ng: WiFi güvenlik denetim araçları paketi")
		print("    [02] Wifite: Otomatik bir kablosuz saldırı aracı")
		print("    [03] Wifiphisher")
		print("    [04] Routersploit: Cihazlar için İstismar Programı")
		print("\n    [00] Ana Menüye Dön\n")
		wiretak = input("lmst > ")
		if wiretak.strip() == "01" or wiretak.strip() == "1": aircrackng()
		elif wiretak.strip() == "02" or wiretak.strip() == "2": wifite()
		elif wiretak.strip() == "03" or wiretak.strip() == "3": wifiphisher()
		elif wiretak.strip() == "04" or wiretak.strip() == "4": routersploit()
		elif wiretak.strip() == "00" or wiretak.strip() == "0": restart_program()
		else: print("\nERROR: Wrong Input");timeout(1);restart_program()
	
	# 07 - Tersine Mühendislik
	elif topluarac.strip() == "7" or topluarac.strip() == "07":
		print("\n    [01] Binary Exploitation")
		print("    [02] jadx: DEX-JAVA")
		print("    [03] apktool: Android uygulamaları için kullanılabilecek bir yardımcı program")
		print("    [04] uncompyle6: Python çapraz sürüm bayt kodu çözücü")
		print("    [05] ddcrypt: Kodun arkasında yatan algritmayı ortaya çıkaran araç")
		print("\n    [00] Ana Menüye Dön\n")
		reversi = input("lmst > ")
		if reversi.strip() == "01" or reversi.strip() == "1": binploit()
		elif reversi.strip() == "02" or reversi.strip() == "2": jadx()
		elif reversi.strip() == "03" or reversi.strip() == "3": apktool()
		elif reversi.strip() == "04" or reversi.strip() == "4": uncompyle()
		elif reversi.strip() == "05" or reversi.strip() == "5": ddcrypt()
		elif reversi.strip() == "00" or reversi.strip() == "0": restart_program()
		else: print("\nERROR: Wrong Input");timeout(1);restart_program()
	
	# 08 - İstismar Araçları
	elif topluarac.strip() == "8" or topluarac.strip() == "08":
		print("\n    [01] Metasploit: İstismar kodunu geliştirmek, test etmek ve kullanmak için gelişmiş açık kaynaklı platform")
		print("    [02] commix: Otomatik Hepsi Bir Arada İşletim Sistemi Komut Enjeksiyonu ve Sömürü Aracı")
		print("    [03] MSF-Pg: Payload üretmek için araç")
		print("    [04] Brutal: 3'teki aracın kolaylaştırılmış hali")
		print("    [05] TXTool: Kolay bir pentesting aracı")
		print("    [06] XAttacker: Web Sitesinde Güvenlik Açığı Tarayıcısı ve Otomatik Sömürücü")  
		print("    [07] Websploit: Gelişmiş MiTM Aracı")
		print("    [08] Routersploit: Cihazlar için İstismar Programı")
		print("    [09] BlackBox: Sızma Testi Aracı")
		print("\n    [00] Ana Menüye Dön\n")
		exploitool = input("lmst > ")
		if exploitool.strip() == "01" or exploitool.strip() == "1": metasploit()
		elif exploitool.strip() == "02" or exploitool.strip() == "2": commix()
		elif exploitool.strip() == "03" or exploitool.strip() == "3": msfpg()
		elif exploitool.strip() == "04" or exploitool.strip() == "4": brutal()
		elif exploitool.strip() == "05" or exploitool.strip() == "5": txtool()
		elif exploitool.strip() == "06" or exploitool.strip() == "6": xattacker()
		elif exploitool.strip() == "07" or exploitool.strip() == "7": websploit()
		elif exploitool.strip() == "08" or exploitool.strip() == "8": routersploit()
		elif exploitool.strip() == "09" or exploitool.strip() == "9": blackbox()
		elif exploitool.strip() == "00" or exploitool.strip() == "0": restart_program()
		else: print("\nERROR: Wrong Input");timeout(1);restart_program()
	
	# 09 - Bulma ve Sızdırma
	elif topluarac.strip() == "9" or topluarac.strip() == "09":
		print("\n    [01] KnockMail: E-postanın Var olup olmadığını Doğrula")
		print("    [02] tcpdump: komut satırı paket analizörü")
		print("    [03] Hac")
		print("    [04] hping3: hping komut satırı yönelimli bir TCP / IP paket birleştiricisi / analizörü")
		print("    [05] SocialFish: Eğitici oltalama ve bilgi toplama aracı")
		print("    [06] santet-online: Sosyal Mühendislik Aracı")
		print("    [07] SpazSMS: Sms Bombası")
		print("    [08] LiteOTP: Çoklu Sms Bombası")
		print("    [09] tshark: Ağ protokolü analizörü ve dinleyicisi")
		print("    [10] Ettercap: MITM saldırıları için kapsamlı paket, canlı bağlantıları bulur, anında içerik filtreleme yapar gibi")
		print("\n    [00] Ana Menüye Dön\n")
		sspoof = input("lmst > ")
		if sspoof.strip() == "01" or sspoof.strip() == "1": knockmail()
		elif sspoof.strip() == "02" or sspoof.strip() == "2": tcpdump()
		elif sspoof.strip() == "03" or sspoof.strip() == "3": hac()
		elif sspoof.strip() == "04" or sspoof.strip() == "4": hping3()
		elif sspoof.strip() == "05" or sspoof.strip() == "5": socfish()
		elif sspoof.strip() == "06" or sspoof.strip() == "6": sanlen()
		elif sspoof.strip() == "07" or sspoof.strip() == "7": spazsms()
		elif sspoof.strip() == "08" or sspoof.strip() == "8": liteotp()
		elif sspoof.strip() == "09" or sspoof.strip() == "9": tshark()
		elif sspoof.strip() == "10": ettercap()
		elif sspoof.strip() == "00" or sspoof.strip() == "0": restart_program()
		else: print("\nERROR: Wrong Input");timeout(1);restart_program()
	
	# 10 - Raporlama Araçları
	elif topluarac.strip() == "10":
		print("\n    [01] dos2unix: DOS ve Unix metin dosyaları arasında dönüştürme yapar")
		print("    [02] exiftool: Çok çeşitli dosyalarda meta bilgileri okumak, yazmak ve düzenlemek için yardımcı program")
		print("    [03] iconv: Farklı karakter kodlamaları arasında dönüştürme programı")
		print("    [04] mediainfo: Medya dosyalarından bilgi okumak için komut satırı yardımcı programı")
		print("    [05] pdfinfo: PDF belgeden bilgi çıkarıcı")
		print("\n    [00] Ana Menüye Dön\n")
		reportls = input("lmst > ")
		if reportls.strip() == "01" or reportls.strip() == "1": dos2unix()
		elif reportls.strip() == "02" or reportls.strip() == "2": exiftool()
		elif reportls.strip() == "03" or reportls.strip() == "3": iconv()
		elif reportls.strip() == "04" or reportls.strip() == "4": mediainfo()
		elif reportls.strip() == "05" or reportls.strip() == "5": pdfinfo()
		elif reportls.strip() == "00" or reportls.strip() == "0": restart_program()
		else: print("\nERROR: Wrong Input");timeout(1);restart_program()

	# 11 - Linux Dağıtımları İndir
	elif topluarac.strip() == "11":
		print("\n    [01] Ubuntu")
		print("    [02] Fedora")
		print("    [03] Kali Nethunter")
		print("    [04] Parrot")
		print("    [05] Arch Linux")
		innudis = input("lmst > ")
		if innudis.strip() == "01" or innudis.strip() == "1": ubuntu()
		elif innudis.strip() == "02" or innudis.strip() == "2": fedora()
		elif innudis.strip() == "03" or innudis.strip() == "3": nethunter()
		elif innudis.strip() == "04" or innudis.strip() == "4": parrot()
		elif innudis.strip() == "05" or innudis.strip() == "5": archlinux()
		elif innudis.strip() == "00" or innudis.strip() == "0": restart_program()
		else: print("\nERROR: Wrong Input");timeout(1);restart_program()

	# 12 - Stres Testi
	elif topluarac.strip() == "12":
		print("\n    [01] Torshammer: Yavaş DDos aracı")
		print("    [02] Slowloris: Düşük bant genişliğinde Dos aracı")
		print("    [03] Fl00d & Fl00d2: UDP Flood aracı")
		print("    [04] GoldenEye: GoldenEye Layer 7 (KeepAlive+NoCache) DoS test aracı")
		print("    [05] Xerxes: En Güçlü Dos Aracı")
		print("    [06] Planetwork-DDOS")
		print("    [07] Xshell")
		print("    [08] santet-online: Sosyal Mühendislik Aracı")
		print("\n    [00] Ana Menüye Dön\n")
		stresstest = input("lmst > ")
		if stresstest.strip() == "01" or stresstest.strip() == "1": torshammer()
		elif stresstest.strip() == "02" or stresstest.strip() == "2": slowloris()
		elif stresstest.strip() == "03" or stresstest.strip() == "3": fl00d12()
		elif stresstest.strip() == "04" or stresstest.strip() == "4": goldeneye()
		elif stresstest.strip() == "05" or stresstest.strip() == "5": xerxes()
		elif stresstest.strip() == "06" or stresstest.strip() == "6": planetwork_ddos()
		elif stresstest.strip() == "07" or stresstest.strip() == "7": xshell()
		elif stresstest.strip() == "08" or stresstest.strip() == "8": sanlen()
		elif stresstest.strip() == "00" or stresstest.strip() == "0": restart_program()
		else: print("\nERROR: Wrong Input");timeout(1);restart_program()
	
	# 13 - Termux Yardımcı Araçlar
	elif topluarac.strip() == "13":
		print("\n    [01] SpiderBot")
		print("    [02] Ngrok: yerel bağlantı noktalarını genel URL lere tünelleyin ve trafiği inceleyin")
		print("    [03] Sudo: Android için Sudo İndirici")
		print("    [04] google: Google arama motoruna Python bağları-yani telegram ratı mobilden yapabilme kolaylığı :D")
		print("    [05] kojawafft")
		print("    [06] ccgen: Kredi Kartı Oluşturucu")
		print("    [07] VCRT: Virus Oluşturucu")
		print("    [08] E-Code: PHP Script Kodlayıcı")
		print("    [09] Termux-Styling")
		print("    [11] xl-py: XL Doğrudan Satın Alma Paketi")
		print("    [12] BeanShell: Java ile yazılmış, nesne komut dosyası dili özellikleriyle küçük, ücretsiz, geliştirilebilir Java kaynak yorumlayıcısı")
		print("    [13] vbug: Virus Oluşturucu 2")
		print("    [14] Crunch: Özelleştirilebilir Wordlist Oluşturucu")
		print("    [15] Textr: Metin çalıştırıcı")
		print("    [16] heroku: CLI ve HEROKU etkileşime geçiricisi")
		print("    [17] RShell: Tek Dinleme İçin TErs Shell")
		print("    [18] TermPyter: Termux üzerindeki tüm hatalı kurulumları düzeltin")
		print("    [19] F4K3: Sahte Kullanıcı Bilgileri Oluşturucu")
		print("\n    [00] Ana Menüye Dön\n")
		moretool = input("lmst > ")
		if moretool.strip() == "01" or moretool.strip() == "1": spiderbot()
		elif moretool.strip() == "02" or moretool.strip() == "2": ngrok()
		elif moretool.strip() == "03" or moretool.strip() == "3": sudo()
		elif moretool.strip() == "04" or moretool.strip() == "4": google()
		elif moretool.strip() == "05" or moretool.strip() == "5": kojawafft()
		elif moretool.strip() == "06" or moretool.strip() == "6": ccgen()
		elif moretool.strip() == "07" or moretool.strip() == "7": vcrt()
		elif moretool.strip() == "08" or moretool.strip() == "8": ecode()
		elif moretool.strip() == "09" or moretool.strip() == "9": stylemux()
		elif moretool.strip() == "10": passgencvar()
		elif moretool.strip() == "11": xlPy()
		elif moretool.strip() == "12": beanshell()
		elif moretool.strip() == "13": vbug()
		elif moretool.strip() == "14": crunch()
		elif moretool.strip() == "15": textr()
		elif moretool.strip() == "16": heroku()
		elif moretool.strip() == "17": rshell()
		elif moretool.strip() == "18": termpyter()
		elif moretool.strip() == "19": f4k3()
		elif moretool.strip() == "00" or moretool.strip() == "0": restart_program()
		else: print("\nERROR: Wrong Input");timeout(1);restart_program()
	
	# 14 - Shell Fonksiyon [.bashrc]
	elif topluarac.strip() == "14":
		print("\n    [01] FBVid (FB Video İndirici)")
		print("    [02] cast2video")
		print("    [03] quikfind (Dosya Bulucu)")
		print("\n    [00] Ana Menüye Dön\n")
		myshf = input("lmst > ")
		if myshf.strip() == "01" or myshf.strip() == "1": fbvid()
		elif myshf.strip() == "02" or myshf.strip() == "2": cast2video()
		elif myshf.strip() == "03" or myshf.strip() == "3": quikfind()
		elif myshf.strip() == "00" or myshf.strip() == "0": restart_program()
		else: print("\nERROR: Wrong Input");timeout(1);restart_program()
	
	elif topluarac.strip() == "00":
		sys.exit()
	
	else:
		print("\nERROR: Wrong Input")
		timeout(1)
		restart_program()

if __name__ == "__main__":
	main()
